<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="3" skipped="1" tests="33" time="11.797" timestamp="2025-05-24T10:18:22.395433" hostname="IBRAHIM"><testcase classname="tests.db.test_user_model" name="test_user_model_create" time="0.073" /><testcase classname="tests.db.test_user_model" name="test_user_model_update" time="0.018" /><testcase classname="tests.db.test_user_model" name="test_user_model_delete" time="0.030" /><testcase classname="tests.integration.test_auth_routes" name="test_register_success" time="0.373" /><testcase classname="tests.integration.test_auth_routes" name="test_register_duplicate_email" time="0.318" /><testcase classname="tests.integration.test_auth_routes" name="test_login_success" time="0.629" /><testcase classname="tests.integration.test_auth_routes" name="test_login_wrong_password" time="0.629" /><testcase classname="tests.integration.test_auth_routes" name="test_login_nonexistent_user" time="0.023" /><testcase classname="tests.integration.test_auth_routes" name="test_me_endpoint" time="0.659" /><testcase classname="tests.integration.test_auth_routes" name="test_me_unauthorized" time="0.021" /><testcase classname="tests.integration.test_auth_routes" name="test_update_me" time="0.668" /><testcase classname="tests.integration.test_auth_routes" name="test_logout" time="0.635" /><testcase classname="tests.integration.test_game_routes" name="test_create_game_route" time="0.645" /><testcase classname="tests.integration.test_game_routes" name="test_create_game_unauthorized" time="0.022" /><testcase classname="tests.integration.test_game_routes" name="test_get_game_by_id_route" time="0.628" /><testcase classname="tests.integration.test_game_routes" name="test_get_nonexistent_game" time="0.020" /><testcase classname="tests.integration.test_game_routes" name="test_get_all_games_route" time="0.723" /><testcase classname="tests.integration.test_game_routes" name="test_delete_game_route" time="0.659" /><testcase classname="tests.integration.test_game_routes" name="test_delete_game_unauthorized" time="0.657" /><testcase classname="tests.unit.test_auth_service" name="test_password_hash_and_verify" time="0.993" /><testcase classname="tests.unit.test_auth_service" name="test_create_user" time="0.363" /><testcase classname="tests.unit.test_auth_service" name="test_create_duplicate_user_raises_error" time="0.343" /><testcase classname="tests.unit.test_auth_service" name="test_authenticate_user" time="1.020" /><testcase classname="tests.unit.test_auth_service" name="test_create_access_token" time="0.001" /><testcase classname="tests.unit.test_failures" name="test_intentional_failure" time="0.001"><failure message="AssertionError: Bu test kasıtlı olarak başarısız oldu&#10;assert False">def test_intentional_failure():
        """Bu test, gösterge panosunda başarısız test görünümünü göstermek için kasıtlı olarak başarısız olur."""
&gt;       assert False, "Bu test kasıtlı olarak başarısız oldu"
E       AssertionError: Bu test kasıtlı olarak başarısız oldu
E       assert False

tests\unit\test_failures.py:8: AssertionError</failure></testcase><testcase classname="tests.unit.test_failures" name="test_expected_vs_actual" time="0.001"><failure message="AssertionError: Beklenen: beklenen değer, Gerçek: gerçek değer&#10;assert 'beklenen değer' == 'gerçek değer'&#10;  - gerçek değer&#10;  + beklenen değer">def test_expected_vs_actual():
        """Beklenen ve gerçek değerlerin karşılaştırılmasını gösteren başarısız test."""
        expected = "beklenen değer"
        actual = "gerçek değer"
&gt;       assert expected == actual, f"Beklenen: {expected}, Gerçek: {actual}"
E       AssertionError: Beklenen: beklenen değer, Gerçek: gerçek değer
E       assert 'beklenen değer' == 'gerçek değer'
E         - gerçek değer
E         + beklenen değer

tests\unit\test_failures.py:14: AssertionError</failure></testcase><testcase classname="tests.unit.test_failures" name="test_exception_raised" time="0.001"><failure message="ValueError: Bu bir hata mesajıdır">def test_exception_raised():
        """Beklenmeyen bir istisnanın fırlatıldığı başarısız test."""
        def function_that_raises():
            raise ValueError("Bu bir hata mesajıdır")
    
&gt;       function_that_raises()

tests\unit\test_failures.py:21: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

    def function_that_raises():
&gt;       raise ValueError("Bu bir hata mesajıdır")
E       ValueError: Bu bir hata mesajıdır

tests\unit\test_failures.py:19: ValueError</failure></testcase><testcase classname="tests.unit.test_failures" name="test_skipped" time="0.000"><skipped type="pytest.skip" message="Bu test atlandı">C:\Users\msii\mapico\Backend\tests\unit\test_failures.py:23: Bu test atlandı</skipped></testcase><testcase classname="tests.unit.test_game_service" name="test_create_game" time="0.332" /><testcase classname="tests.unit.test_game_service" name="test_get_game_by_id" time="0.348" /><testcase classname="tests.unit.test_game_service" name="test_get_game_by_nonexistent_id" time="0.014" /><testcase classname="tests.unit.test_game_service" name="test_get_all_games" time="0.336" /><testcase classname="tests.unit.test_game_service" name="test_delete_game" time="0.392" /></testsuite></testsuites>